# CI type:shell
# https://github.com/coolsnowwolf/lede
# CI ref:https://github.com/coolsnowwolf/lede/blob/master/.github/workflows/openwrt-ci.yml
# base
# ubuntu 20.04 x64 
# sudo apt-get update 
# sudo apt-get install build-essential asciidoc binutils 
# bzip2 gawk gettext git libncurses5-dev libz-dev patch 
# unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion 
# flex uglifyjs git-core gcc-multilib p7zip p7zip-full 
# msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils 
# upx libelf-dev autoconf automake libtool autopoint 
# device-tree-compiler
#
# git clone url
# /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild
#
# 贡献者、本仓库使用者注意：
# 原则上，本程序仅用于屎黄本人和其朋友使用，如你fork本项目并在本网站上通过
# CI编译，将会共享原lede仓库，并非纯净的docker模式，建议使用github的action
# 功能，实施纯净编译以及满足更多的个性化操作。
#
# 如果你要借助在gitlab本地进行编译，请遵守以下约定：
# 请勿修改job_base内容，即不要随意启用任何的mkdir、rm操作；
# 需要额外请求github操作应当发issue、pr给本上游仓库；
# 你只能个性化job_机型里的“固件定制部分至固件定制部分结束”的内容；
# 
# 所有的/home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin/中的shihuang
# 改为你的用户名，例如/home/gitlab-runner/builds/b5d89257/0/zhangsan/routerbuild/bin/
#
# 再次重申：
# 禁止在任何阶段对lede仓库做rm、mkdir等操作，如有需要请pr、issue
#
# Github Action，范例可见：
# https://github.com/ClayMoreBoy/lede/actions
# https://github.com/ClayMoreBoy/OpenWrt-Actions-R7800
#
# 有关文档：
# https://github.com/coolsnowwolf/lede/pull/2198
#
# lede仓库已包含对github action的支持以及示例代码
#
# 使用本地仓库的CI进行有限的个性化可参考：wendy03/routerbuild
#
# 本仓库中archive文件夹里的配置文件为老旧文件，仅供参考，请勿直接cp到lede下
#

stages:
  - base
  - r4s
  
job_base:
  stage: base
  tags: 
  - shell
  except:
  - tags
  script:
    ## 下游分支仓库不得修改base，如有需要请发起pr、issue
    # clean build
    - cd /home/gitlab-runner/
    - if [ ! -d "/lede/" ];then rm -R lede; else git clone https://github.com/coolsnowwolf/lede.git; fi
    #- git clone https://github.com/coolsnowwolf/lede.git
    - cd /home/gitlab-runner/lede
    ## update code
    #- cd /home/gitlab-runner/lede
    #- git pull
    #- rm -rf ./tmp
    # remove feeds dl tmp
    #- cd /home/gitlab-runner/lede
    #- rm -rf ./tmp
    #- rm -rf ./feeds
    #- rm -rf ./dl
    ## extra package&git
    # 第二次编译开始请注释掉以下内容
    #- cd /home/gitlab-runner/lede/package
    #- cd mkdir openwrt-packages
    #- rm -rf ./openwrt-packages
    # 主题git
    #- git clone https://github.com/openwrt-develop/luci-theme-atmaterial.git
    #- cd /home/gitlab-runner/lede/package/luci-theme-atmaterial
    #- git pull
    #- git clone https://github.com/rosywrt/luci-theme-rosy.git
    #- cd /home/gitlab-runner/lede/package/luci-theme-rosy
    #- git pull
    #- cd /home/gitlab-runner/lede
    #- rm -rf ./tmp
    #- sed -i '9s/#src-git/src-git/g' ./feeds.conf.default
    ## 添加helloworld源
    - sed -i '$a\src-git helloworld https://github.com/fw876/helloworld' ./feeds.conf.default
    ## extra
    #- sed -i "/helloworld/d" "feeds.conf.default"
    #- echo "src-git helloworld https://github.com/fw876/helloworld.git" >> "feeds.conf.default"
    # 添加其他源
    # openclash
    #- sed -i '$a\src-git openclash https://github.com/vernesong/OpenClash' ./feeds.conf.default
    #- ./scripts/feeds clean
    - ./scripts/feeds update -a
    - ./scripts/feeds install -a
    # Make clean
    #- make clean
    ## extra modify
    ## 类似：https://github.com/msylgj/R2S-R4S-OpenWrt/blob/21.02/SCRIPTS/prepare_package.sh
    ## https://github.com/klever1988/nanopi-openwrt/blob/master/scripts/patches.sh
    ### 修改默认wan的ip地址为192.168.2.1
    - sed -i 's/192.168.1.1/192.168.2.1/g' package/base-files/files/bin/config_generate
    # set default theme to argon
    - sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase="/luci-static/argon"' `find package -type f -path '*/default-settings/files/zzz-default-settings'`

job_r4s:
  stage: r4s
  tags: 
  - shell
  except:
  - tags
  script: |
    cd /home/gitlab-runner/lede
    rm -f ./.config*
    touch ./.config
    
    echo 'Custom configure file'
    #
    # ========================固件定制部分========================
    # 
    # 编译r4s固件:
    cat >> .config <<EOF
    CONFIG_TARGET_rockchip=y
    CONFIG_TARGET_rockchip_armv8=y
    CONFIG_TARGET_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4s=y
    EOF
    # 部分配置修改：
    cat >> .config <<EOF
    CONFIG_TARGET_ROOTFS_TARGZ=y
    EOF
    # 常用LuCI插件和额外包选择:
    cat >> .config <<EOF
    CONFIG_PACKAGE_luci-app-jd-dailybonus=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_NaiveProxy=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Client=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Server=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Libev_Server=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_Obfs=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_Plugin=y
    CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Xray=y
    CONFIG_PACKAGE_luci-app-uugamebooster=y
    EOF
    # LuCI主题:
    cat >> .config <<EOF
    CONFIG_PACKAGE_luci-theme-argon=y
    EOF
    # 取消编译(不要删除被缩进的注释符号):
    cat >> .config <<EOF
    # CONFIG_PACKAGE_luci-app-accesscontrol is not set
    # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
    # CONFIG_PACKAGE_luci-app-ddns is not set
    # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
    # CONFIG_PACKAGE_luci-app-unblockmusic is not set
    # CONFIG_UnblockNeteaseMusic_Go is not set
    # CONFIG_PACKAGE_luci-app-vlmcsd is not set
    # CONFIG_PACKAGE_luci-app-wol is not set
    # CONFIG_PACKAGE_luci-app-zerotier is not set
    EOF
    # 
    # ========================固件定制部分结束========================
    # 
    
    echo 'Generate configuration file'
    # 对比配置文件：
    cd /home/gitlab-runner/lede
    sed -i 's/^[ \t]*//g' ./.config
    make defconfig
    
    echo 'Make Clean'
    make clean
    
    echo 'Make download'
    make download -j1
    echo 'Compile firmware'
    echo -e "$(nproc) thread compile"
    make -j$(nproc) || make -j1
    
    echo 'Assemble artifact'
    # build pass and save
    ## config
    cp /home/gitlab-runner/lede/.config /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin/.config
    ## friendlyarm_nanopi_r4s
    #cp /home/gitlab-runner/lede/bin/targets/rockchip/armv8/openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-ext4-sysupgrade.img.gz /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin/`date   +%Y%m%d`-$CI_JOB_ID-openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-ext4-sysupgrade.img.gz
    cp /home/gitlab-runner/lede/bin/targets/rockchip/armv8/openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-squashfs-sysupgrade.img.gz /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin/`date   +%Y%m%d`-$CI_JOB_ID-openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-squashfs-sysupgrade.img.gz
    ## remove git file
    cd /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin
    rm .gitignore
    # 上传与发布
    ## 上传
    ### 上传到CowTransfer奶牛快传
    echo 'Upload Firmware To CowTransfer'
    cd /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/transfer
    curl -sL https://git.io/file-transfer | bash -s beta
    ./transfer cow --block 2621440 -s -p 99 -t 15 --hash --no-progress /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin 2>&1 | tee cowtransfer.log
    #- echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
    #- echo "::set-env name=COWTRANSFER_URL::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
    #- echo $COWTRANSFER_URL
    export COWTRANSFER_URL=$(cat cowtransfer.log | grep https | cut -f3 -d" ")
    echo $COWTRANSFER_URL
    ### 上传到其他平台
    ### 上传到七牛云
    echo 'Upload Firmware To Qiniu'
    cd /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/qiniu
    #### https://devtools.qiniu.com/qshell-v2.6.2-linux-amd64.tar.gz
    chmod +x qshell
    ./qshell account $qAK $qSK qiniu --overwrite
    ##### squashfs-sysupgrade.img.gz
    ./qshell fput staticdownload openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-squashfs-sysupgrade.img.gz /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin/`date   +%Y%m%d`-$CI_JOB_ID-openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-squashfs-sysupgrade.img.gz --overwrite
    ##### .config
    ./qshell fput staticdownload r4s.config /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin/.config --overwrite
    # 发布release
    echo 'Release R4S'
    curl --header 'Content-Type: application/json' --header "PRIVATE-TOKEN: $user_token" --data '{ "name": "'"`date   +%Y%m%d`"'-R4S-'"$CI_JOB_ID"'-snapshot", "tag_name": "CI-'"$CI_JOB_ID"'", "ref": "'"$CI_COMMIT_BRANCH"'", "description": "说明：<br />默认地址：192.168.2.1<br />默认账号：root<br />默认密码：password<br />默认主题：argon<br /><br />*.img.gz格式文件直接使用，无需解压。如果下载的扩展名是*.zip需要解压，里面*.img.gz是固件。<br />将固件*.img.gz使用烧录工具烧录或者在路由器网页管理后台直接上传升级使用<br />管理后台升级仅限于之前曾经使用在本处编译的固件并且并非大版本之间更新，大版本更新可能会清除所有配置信息或者请直接烧录重置全部数据。<br /><br />烧录工具下载：<br />[balenaEtcher](https://www.balena.io/etcher/)<br /><br />固件下载地址：<br />🔗[本地下载（内网用户）](http://192.168.2.100:800/shihuang/routerbuild/-/jobs/'"$CI_JOB_ID"'/artifacts/download)<br />【说明】链接有效期为编译成功后6个月，仅限内网用户使用，外网用户建议使用下面的其他外链地址下载。<br /><br />🔗[本地下载（外网用户）](http://git.qyh.name/shihuang/routerbuild/-/jobs/'"$CI_JOB_ID"'/artifacts/download)<br />【说明】链接有效期为编译成功后6个月，下载限速，可能下载缓慢或出现中断，不推荐外网用户使用，外网用户建议使用下面的其他外链地址下载。<br /><br /><br />🔗[Cowtransfer奶牛快传]('"$COWTRANSFER_URL"')<br />【说明】链接有效期为编译成功后1天内，有下载次数限制。<br />🔗[七牛云(固件)](http://down.cdn.qyh0214.com/openwrt-rockchip-armv8-friendlyarm_nanopi-r4s-squashfs-sysupgrade.img.gz)<br />【说明】链接有效期为长期，在每次编译成功后即覆盖为新版本。<br />🔗[七牛云(固件CI配置文件config)](http://down.cdn.qyh0214.com/r4s.config)<br />【说明】链接有效期为长期，在每次编译成功后即覆盖为新版本。此文件主要用于开发者使用，一般无需下载。<br />"}' --request POST http://git.qyh.name/api/v4/projects/41/releases
 
  artifacts:
    name: "`date   +%Y%m%d`-$CI_JOB_ID-openwrt-router-r4s"
    expire_in: 6 months
    paths:
      - /home/gitlab-runner/builds/b5d89257/0/shihuang/routerbuild/bin
  # disable artifact passing
  dependencies: []
